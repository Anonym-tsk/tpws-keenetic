#!/bin/sh

. /opt/etc/tpws/tpws.conf

TPWS_BIN="/opt/usr/bin/tpws"

FontColor_Red="\033[31m"
FontColor_Green="\033[32m"
FontColor_Yellow="\033[33m"
FontColor_Suffix="\033[0m"

log() {
    LEVEL="$1"
    MSG="$2"
    TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

    case "${LEVEL}" in
        INFO)
            printf "[${TIMESTAMP}] [${FontColor_Green}${LEVEL}${FontColor_Suffix}] %s\n" "${MSG}" | tee -a "$LOGFILE"
            ;;
        WARN)
            printf "[${TIMESTAMP}] [${FontColor_Yellow}${LEVEL}${FontColor_Suffix}] %s\n" "${MSG}" | tee -a "$LOGFILE"
            ;;
        ERROR)
            printf "[${TIMESTAMP}] [${FontColor_Red}${LEVEL}${FontColor_Suffix}] %s\n" "${MSG}" | tee -a "$LOGFILE" >&2
            ;;
        *)
            printf "[${TIMESTAMP}] %s\n" "${MSG}" | tee -a "$LOGFILE"
            ;;
    esac
}

start() {
    if [ -f "$PIDFILE" ] && kill -0 "$(cat "$PIDFILE" 2>/dev/null)"; then
        log WARN "Service TPWS is already running"
        return 1
    fi

    BIND_IFACE=""
    for IFACE in $LOCAL_INTERFACE; do
        BIND_IFACE="$BIND_IFACE --bind-iface4=$IFACE"
        log INFO "Bind to local interface: $IFACE"
    done

    log INFO "Starting TPWS service with command"
    if $TPWS_BIN --daemon="$BIND_IFACE" --port="$BIND_PORT" --pidfile="$PIDFILE" $TPWS_ARGS $TPWS_EXTRA_ARGS >>"$LOGFILE" 2>&1; then
        firewall_start
        log INFO "Started TPWS service"
    else
        log ERROR "Failed to start TPWS service"
    fi
}

stop() {
    firewall_stop

    if [ ! -f "$PIDFILE" ] || ! kill -0 "$(cat "$PIDFILE" 2>/dev/null)"; then
        log ERROR "Service TPWS is not running"
        return 1
    fi

    log WARN "Stopping TPWS service..."
    if kill -15 "$(cat "$PIDFILE")"; then
        rm -f "$PIDFILE"
        log INFO "Stopped TPWS service"
    else
        log ERROR "Failed to stop TPWS service"
    fi
}

reload() {
    if [ ! -f "$PIDFILE" ] || ! kill -0 "$(cat "$PIDFILE" 2>/dev/null)"; then
        log ERROR "Service TPWS is not running"
        return 1
    fi

    log WARN 'Reloading TPWS service...'
    kill -1 $(cat "$PIDFILE")
}

firewall_start() {
    if ! iptables-save 2>/dev/null | grep -q "to-ports $BIND_PORT"; then
        log WARN "iptables rules not found. Adding..."
        for IFACE in $LOCAL_INTERFACE; do
            iptables -t nat -A PREROUTING -i "$IFACE" -p tcp --dport 80 -j REDIRECT --to-port "$BIND_PORT"
            iptables -t nat -A PREROUTING -i "$IFACE" -p tcp --dport 443 -j REDIRECT --to-port "$BIND_PORT"
            iptables -t nat -A PREROUTING -i "$IFACE" -p udp --dport 443 -j REDIRECT --to-port "$BIND_PORT"
        done
    fi
}

firewall_stop() {
    if iptables-save 2>/dev/null | grep -q "to-ports $BIND_PORT"; then
        log WARN "Dropping iptables rules before stopping TPWS service..."
        for IFACE in $LOCAL_INTERFACE; do
            iptables -t nat -D PREROUTING -i "$IFACE" -p tcp --dport 80 -j REDIRECT --to-port "$BIND_PORT"
            iptables -t nat -D PREROUTING -i "$IFACE" -p tcp --dport 443 -j REDIRECT --to-port "$BIND_PORT"
            iptables -t nat -D PREROUTING -i "$IFACE" -p udp --dport 443 -j REDIRECT --to-port "$BIND_PORT"
        done
    fi
}

status() {
    if [ -f "$PIDFILE" ] && kill -0 "$(cat "$PIDFILE" 2>/dev/null)"; then
        log INFO "Service TPWS is running"
    else
        log INFO "Service TPWS is stopped"
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop && start
        ;;
    reload)
      reload
      ;;
    firewall)
      firewall_start
      ;;
      *)
      printf "Usage: %s {start|stop|restart|reload|status}\n" "$0"
      exit 1
      ;;
esac
